<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Timeline</title>
  <link rel="shortcut icon" href="/media/Final Logo JPG copy.jpg" type="image/x-icon">
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="/styles/style.css">
  <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
  <style>
    
    .propage-input-container {
      display: flex;
      flex-direction: column;
    }
    .info-box button{
      width: 20%;
      font-size: 20px;
    }
    /* .info-box input{
      width: 100%;
    } */
    @media (max-width:500px) {
      .timeline-container{
        padding: 0px;
        margin: 0;
      }

      .timeline-container .timeline-item .text-box .text{
        font-size: 25px;
      } 
      .timeline-container .timeline-item .pro-text span{
        font-size: 18px;
      }
      .propage-input-container input{
        width: 100%;
        padding:5px 10px ;
        margin-top: 10px;
      }
      button.btn{
        width: 100%;
        
      }
      .timeline-item .box1 {
        padding: 5px;
        margin: 0;
      }
      .timeline-item .box2 {
        padding: 5px;
        margin: 0;
      }
      .timeline-item .box2 .def{
        font-size: 20px;
        line-height: 24px;
      }
      .timeline-container .box2 .propage-input-container label{
        font-size: 18px;
      }
      .timeline-container .box2 .date-txt{
        font-size: 20px;
      }
      



      .timeline-item .box3 {
        padding: 5px;
        margin: 0;
      }
      .timeline-item .box3 .def{
        font-size: 20px;
        line-height: 24px;
      }
      .timeline-container .box3 .propage-input-container label{
        font-size: 18px;
      }
      .timeline-container .box3 .date-txt{
        font-size: 20px;
      }
      
  }
  @media (max-width:900px) {
      .timeline-container{
        padding: 0px;
        margin: 0;
      }

      .timeline-container .timeline-item .text-box .text{
        font-size: 35px;
      } 
      .timeline-container .timeline-item .pro-text span{
        font-size: 23px;
      }
      .propage-input-container input{
        width: 100%;
        padding:10px 15px ;
        margin-top: 10px;
      }
      button.btn{
        width: 50%;
        
      }
      .timeline-item .box1 {
        padding: 5px;
        margin: 0;
      }
      .timeline-item .box2 {
        padding: 5px;
        margin: 0;
      }
      .timeline-item .box2 .def{
        font-size: 25px;
        line-height: 24px;
      }
      .timeline-container .box2 .propage-input-container label{
        font-size: 23px;
      }
      .timeline-container .box2 .date-txt{
        font-size: 20px;
      }
      



      .timeline-item .box3 {
        padding: 5px;
        margin: 0;
      }
      .timeline-item .box3 .def{
        font-size: 25px;
        line-height: 24px;
      }
      .timeline-container .box3 .propage-input-container label{
        font-size: 23px;
      }
      .timeline-container .box3 .date-txt{
        font-size: 20px;
      }
      .timeline-item .box1 h2{
        font-size: 25px;
      }
      .timeline-item .box1 label{
        font-size: 22px;
      }
  }
  @media (max-width: 1300px){
    button.btn{
      width: 100%;
    }
    .timeline-container .timeline-item input{
      width: 60%;
    }
  }
  </style>
</head>

<body>
  <div>
    <img src="media/Final Logo JPG.jpg" class="h-32 mx-auto" alt="">
  </div>

  <div class="timeline-container mt-10 px-4 sm:px-8">
    <h2 class="text-4xl font-semibold text-[#3D50DF] text-center text-blue-700">Participate Registration</h2>
    <div class="timeline mt-20">
      <div class="line"></div>

      <!-- Registration Section -->
      <div class="timeline-item" id="registration-item">
        <div class="dot"></div>
        <div class="text-box">
          <div class="text text-[#1E2772]">Registration</div>
          <div class="info-box box1">
            <form action="/teamName" method="post" onsubmit="handleFormSubmit(event)">
              <h2 class="font-medium">Team Details</h2>
              <div class="propage-input-container">
                <label for="teamName">Team name:</label>
              <input type="text" name="teamName" id="teamName" placeholder="Enter your team name" required>
              </div>
                <button class="btn border border-black mt-2" type="submit">Submit Team Name</button>
            </form>
          </div>
        </div>
      </div>

      <!-- Prototype Section -->
      <div class="timeline-item" id="prototype-item">
        <div class="dot"></div>
        <div class="text-box">
          <div class="pro-text text text-[#1E2772] flex items-center gap-2">
            Prototype Upload <span class="text-2xl text-[#3D50DF]"><i>(Image Link)</i></span>
          </div>
          <div class="info-box box2">
            <form action="/prototypelink" method="post" onsubmit="handleFormSubmit(event)">
              <h2 class="font-semibold">Prototype:</h2>
              <p class="def mt-1 font-light text-lg text-gray-600">A prototype is a basic model of your project.</p>
             <div class="propage-input-container">
              <label for="prototype_link" class="inline-block mt-5">Prototype Link:</label>
              <input type="text" name="prototype_link" id="prototype_link" placeholder="Enter your Prototype Link" required>
             </div>
              <p class="date-txt text-red-500 text-lg mt-1">Last date: 7/01/2025</p>
              <button class="btn border border-black mt-2" type="submit">Submit Prototype Link</button>
            </form>
          </div>
        </div>
      </div>

      <!-- Final Report Section -->
      <div class="timeline-item" id="report-item">
        <div class="dot"></div>
        <div class="text-box">
          <div class="text text-[#1E2772]">Final Report</div>
          <div class="info-box box3">
            <form action="/finalreport" method="post" onsubmit="handleFormSubmit(event)">
              <h2 class="font-semibold">Final Report:</h2>
              <p class="def mt-1 font-light text-lg text-gray-600">A final report explains the results of a project.</p>
              <div class="propage-input-container">
                <label for="Final_Report_link" class="inline-block mt-5">Final Report Link:</label>
              <input type="text" name="Final_Report_link" id="Final_Report_link" placeholder="Enter your Final Report Link" required>
              </div>
              <p class="date-txt text-red-500 text-lg mt-1">Last date: 9/01/2025</p>
              <button class="btn border border-black mt-2" type="submit">Submit Final Report</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Generic form submission handler
    async function handleFormSubmit(event) {
      event.preventDefault();
      const form = event.target;
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      try {
        const response = await fetch(form.action, {
          method: form.method,
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        });

        const result = await response.json();
        if (!response.ok) throw new Error(result.msg || 'Error submitting form.');

        alert(result.msg || 'Form submitted successfully!');
      } catch (error) {
        alert(`Error: ${error.message}`);
      }
    }

    document.addEventListener('DOMContentLoaded', () => {
      // Toggle active state for timeline items
      document.querySelectorAll('.timeline-item').forEach(item => {
        item.addEventListener('click', (event) => {
          if (event.target.tagName === 'INPUT' || event.target.tagName === 'BUTTON') return;

          const isActive = item.classList.contains('active');
          document.querySelectorAll('.timeline-item').forEach(i => i.classList.remove('active'));
          if (!isActive) item.classList.add('active');
        });
      });

      // Prevent clicks inside info-box from closing the timeline-item
      document.querySelectorAll('.info-box').forEach(infoBox => {
        infoBox.addEventListener('click', (event) => event.stopPropagation());
      });
    });
  </script>
<script>
  // Generic form submission handler
  async function handleFormSubmit(event) {
    event.preventDefault();

    const form = event.target;
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());
    const errorMessage = form.querySelector('.error-message') || document.createElement('p');
    const successMessage = form.querySelector('.success-message') || document.createElement('p');

    // Ensure error and success message containers exist
    if (!form.querySelector('.error-message')) {
      errorMessage.classList.add('error-message', 'text-red-500', 'mt-2');
      form.appendChild(errorMessage);
    }

    if (!form.querySelector('.success-message')) {
      successMessage.classList.add('success-message', 'text-green-500', 'mt-2');
      form.appendChild(successMessage);
    }

    // Clear previous messages
    errorMessage.textContent = '';
    successMessage.textContent = '';

    try {
      const response = await fetch(form.action, {
        method: form.method,
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      const contentType = response.headers.get('Content-Type');

      if (!response.ok) {
        if (contentType && contentType.includes('application/json')) {
          const result = await response.json();
          throw new Error(result.msg || 'An error occurred while processing your request.');
        } else {
          throw new Error('Unexpected response from the server.');
        }
      }

      const result = await response.json();
      successMessage.textContent = result.msg || 'Submitted successfully!';
    } catch (error) {
      errorMessage.textContent = error.message;
    }
  }
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const registrationStatus = <%= JSON.stringify(registrationStatus) %>;
    const driveStatus = <%= JSON.stringify(driveStatus) %>;
    const reportStatus = <%= JSON.stringify(reportStatus) %>;

    console.log("Statuses are passed");
    console.log('Registration Status:', registrationStatus);
    console.log('Drive Status:', driveStatus);
    console.log('Report Status:', reportStatus);
    
    // Check registration status
    if (registrationStatus) {
      document.getElementById('registration-item').classList.add('success');
    }

    // Check drive status
    if (driveStatus) {
      document.getElementById('prototype-item').classList.add('success');
    }

    // Check report status
    if (reportStatus) {
      document.getElementById('report-item').classList.add('success');
    }
  });
</script>

<script>
  document.getElementById('teamNameForm').addEventListener('submit', async (e) => {
    e.preventDefault(); // Prevent default form submission

    const teamName = document.getElementById('teamName').value;

    try {
      const response = await fetch('/api/teamName', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ teamName }),
      });

      const result = await response.json();

      if (response.ok) {
        alert(result.msg); // Display success message
      } else {
        alert(`Error: ${result.msg}`); // Display error message
      }
    } catch (error) {
      alert('An unexpected error occurred.');
      console.error(error);
    }
  });
</script>
</body>

</html>
